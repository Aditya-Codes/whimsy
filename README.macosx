This directory has two subdirectories...

1) "asf" contains the "model", i.e., a set of classes which encapsulate access
   to a number of data sources such as LDAP, ICLAs, auth lists, etc.

2) "www" contains the "view", largely a set of cgi scripts that produce HTML.
   Generally a cgi script is self contained, including all of the CSS,
   scripts, AJAX logic (client and server), SVG images, etc.  A single script
   may also produce a set (subtree) of web pages. 

If you want to run this remotely, the model code makes a few assumptions at the
moment:

1) current svn checkouts of various repositories are made (or linked to from)
   /home/whimsysvn/svn:

   svn co --depth=files https://svn.apache.org/repos/private/foundation

2) Access to LDAP requires a tunnel, configuration, and a cert.

   a) A tunnel can be created using the following (substitute your id):
      ssh -N -L 6636:minotaur.apache.org:636 rubys@minotaur.apache.org

   b) The model code determines what host and port to connect to by parsing
      /etc/openldap/ldap.conf for a line that looks like the following:
      uri     ldaps://ldap-tunnel.apache.org:6636

   c) A TLS_CACERT can be obtained via the following (substitute your id):

        ssh rubys@minotaur.apache.org openssl s_client -connect \
          minotaur.apache.org:636 -showcerts

      Copy from BEGIN to END inclusive into the file 
      /etc/openldap/asf-ldap-client.pem.  Point to the file in
      /etc/openldap/ldap.conf with a line like the following:

        TLS_CACERT      /etc/openldap/asf-ldap-client.pem

    d) Update the /etc/hosts file so that the entry for 127.0.0.1 contains
       ldap-tunnel.apache.org:

       127.0.0.1       localhost ldap-tunnel.apache.org

5) The ruby code needs to run under ruby 1.9.3 or higher.

4) Make sure that the wunderbar gem installed.  If it is not, run

  gem install wunderbar

If you would like to understand how the view code works, you can get started
by looking at a few of the Wunderbar demos and README:

  https://github.com/rubys/wunderbar/tree/master/demo
  https://github.com/rubys/wunderbar/blob/master/README.md
